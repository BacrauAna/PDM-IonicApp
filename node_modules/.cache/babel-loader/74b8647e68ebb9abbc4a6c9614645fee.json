{"ast":null,"code":"import axios from 'axios';\nimport { authConfig, baseUrl, getLogger, withLogs } from '../core';\nimport { Plugins } from \"@capacitor/core\";\nconst {\n  Storage\n} = Plugins; //local\n\nconst beautyUrl = `http://${baseUrl}/api/beauty`;\nexport const getBeauties = token => {\n  //return withLogs(axios.get(carteUrl, authConfig(token)), 'getCartes');\n  var result = axios.get(beautyUrl, authConfig(token));\n  result.then(function (result) {\n    result.data.forEach(async beauty => {\n      await Storage.set({\n        key: beauty._id,\n        value: JSON.stringify({\n          beauty // id: beauty._id,\n          // data: beauty.data,\n          // ora: beauty.ora,\n          // servicii: beauty.servicii,\n          // nrPersoane: beauty.nrPersoane,\n          // nume: beauty.nume,\n          // ocupat: beauty.ocupat,\n\n        })\n      });\n    });\n  });\n  return withLogs(result, \"getBeauties\");\n};\nexport const getBeauty = (token, id) => {\n  var result = axios.get(`${beautyUrl}/${id}`, authConfig(token));\n  return withLogs(result, \"getBeauty\");\n};\nexport const createBeauties = (token, beauty) => {\n  var result = axios.post(beautyUrl, beauty, authConfig(token));\n  result.then(async function (r) {\n    var beauty = r.data;\n    await Storage.set({\n      key: beauty._id,\n      value: JSON.stringify(beauty // id: beauty._id,\n      // data: beauty.data,\n      // ora: beauty.ora,\n      // servicii: beauty.servicii,\n      // nrPersoane: beauty.nrPeroane,\n      // nume: beauty.nume,\n      // ocupat: beauty.ocupat,\n      )\n    });\n  });\n  return withLogs(result, \"createBeauties\");\n};\nexport const updateBeauties = (token, beauty) => {\n  var result = axios.put(`${beautyUrl}/${beauty._id}`, beauty, authConfig(token));\n  result.then(async function (r) {\n    var beauty = r.data;\n    await Storage.set({\n      key: beauty._id,\n      value: JSON.stringify(beauty // id: beauty._id,\n      // data: beauty.data,\n      // ora: beauty.ora,\n      // servicii: beauty.servicii,\n      // nrPersoane: beauty.nrPeroane,\n      // nume: beauty.nume,\n      // ocupat: beauty.ocupat,\n      )\n    });\n  });\n  return withLogs(result, \"updateCarte\");\n};\nexport const eraseBeauty = (token, beauty) => {\n  var result = axios.delete(`${beautyUrl}/${beauty._id}`, authConfig(token));\n  result.then(async function (r) {\n    await Storage.remove({\n      key: beauty._id\n    });\n  });\n  return withLogs(result, \"deleteBeauty\");\n};\nconst log = getLogger('ws');\nexport const newWebSocket = (token, onMessage) => {\n  const ws = new WebSocket(`ws://${baseUrl}`);\n\n  ws.onopen = () => {\n    log(\"web socket onopen\");\n    ws.send(JSON.stringify({\n      type: \"authorization\",\n      payload: {\n        token\n      }\n    }));\n  };\n\n  ws.onclose = () => {\n    log(\"web socket onclose\");\n  };\n\n  ws.onerror = error => {\n    log(\"web socket onerror\", error);\n  };\n\n  ws.onmessage = messageEvent => {\n    log(\"web socket onmessage\");\n    onMessage(JSON.parse(messageEvent.data));\n  };\n\n  return () => {\n    ws.close();\n  };\n};","map":{"version":3,"sources":["C:/Users/Anisoara Bacrau/Desktop/an3/PDM/ionic/PDM-IonicApp/src/todo/beautyApi.tsx"],"names":["axios","authConfig","baseUrl","getLogger","withLogs","Plugins","Storage","beautyUrl","getBeauties","token","result","get","then","data","forEach","beauty","set","key","_id","value","JSON","stringify","getBeauty","id","createBeauties","post","r","updateBeauties","put","eraseBeauty","delete","remove","log","newWebSocket","onMessage","ws","WebSocket","onopen","send","type","payload","onclose","onerror","error","onmessage","messageEvent","parse","close"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { authConfig, baseUrl, getLogger, withLogs } from '../core';\r\nimport { BeautyProps } from './BeautyProps';\r\nimport { Plugins } from \"@capacitor/core\";\r\n\r\nconst { Storage } = Plugins; //local\r\nconst beautyUrl = `http://${baseUrl}/api/beauty`;\r\n\r\nexport const getBeauties: (token: string) => Promise<BeautyProps[]> = token => {\r\n    //return withLogs(axios.get(carteUrl, authConfig(token)), 'getCartes');\r\n    var result = axios.get(beautyUrl, authConfig(token));\r\n    result.then(function (result) {\r\n        result.data.forEach(async (beauty: BeautyProps) => {\r\n            await Storage.set({\r\n                key: beauty._id!,\r\n                value: JSON.stringify({beauty\r\n                    // id: beauty._id,\r\n                    // data: beauty.data,\r\n                    // ora: beauty.ora,\r\n                    // servicii: beauty.servicii,\r\n                    // nrPersoane: beauty.nrPersoane,\r\n                    // nume: beauty.nume,\r\n                    // ocupat: beauty.ocupat,\r\n                }),\r\n            });\r\n        });\r\n    });\r\n    return withLogs(result, \"getBeauties\");\r\n};\r\n\r\nexport const getBeauty: (token: string, id: string) => Promise<BeautyProps> = (token,id) => {\r\n    var result = axios.get(`${beautyUrl}/${id}`, authConfig(token))\r\n    return withLogs(result, \"getBeauty\");\r\n}\r\n\r\nexport const createBeauties:\r\n    (token: string,\r\n     beauty: BeautyProps)\r\n        => Promise<BeautyProps> = (token, beauty) => {\r\n    var result = axios.post(beautyUrl, beauty, authConfig(token));\r\n    result.then(async function (r) {\r\n        var beauty = r.data;\r\n        await Storage.set({\r\n            key: beauty._id!,\r\n            value: JSON.stringify(beauty\r\n                // id: beauty._id,\r\n                // data: beauty.data,\r\n                // ora: beauty.ora,\r\n                // servicii: beauty.servicii,\r\n                // nrPersoane: beauty.nrPeroane,\r\n                // nume: beauty.nume,\r\n                // ocupat: beauty.ocupat,\r\n            ),\r\n        });\r\n    });\r\n    return withLogs(result, \"createBeauties\");\r\n};\r\n\r\nexport const updateBeauties:\r\n    (token: string,\r\n     beauty: BeautyProps)\r\n        => Promise<BeautyProps> = (token, beauty) => {\r\n    var result = axios.put(`${beautyUrl}/${beauty._id}`, beauty, authConfig(token));\r\n    result.then(async function (r) {\r\n        var beauty = r.data;\r\n        await Storage.set({\r\n            key: beauty._id!,\r\n            value: JSON.stringify(beauty\r\n                // id: beauty._id,\r\n                // data: beauty.data,\r\n                // ora: beauty.ora,\r\n                // servicii: beauty.servicii,\r\n                // nrPersoane: beauty.nrPeroane,\r\n                // nume: beauty.nume,\r\n                // ocupat: beauty.ocupat,\r\n            ),\r\n        });\r\n    });\r\n    return withLogs(result, \"updateCarte\");\r\n};\r\nexport const eraseBeauty: (\r\n    token: string,\r\n    beauty: BeautyProps)\r\n    => Promise<BeautyProps[]> = (token, beauty) => {\r\n    var result = axios.delete(`${beautyUrl}/${beauty._id}`, authConfig(token));\r\n    result.then(async function (r) {\r\n        await Storage.remove({ key: beauty._id! });\r\n    });\r\n    return withLogs(result, \"deleteBeauty\");\r\n};\r\n\r\ninterface MessageData {\r\n    type: string;\r\n    payload: BeautyProps;\r\n}\r\n\r\nconst log = getLogger('ws');\r\n\r\nexport const newWebSocket = (\r\n    token: string,\r\n    onMessage: (data: MessageData) => void\r\n) => {\r\n    const ws = new WebSocket(`ws://${baseUrl}`);\r\n    ws.onopen = () => {\r\n        log(\"web socket onopen\");\r\n        ws.send(JSON.stringify({ type: \"authorization\", payload: { token } }));\r\n    };\r\n    ws.onclose = () => {\r\n        log(\"web socket onclose\");\r\n    };\r\n    ws.onerror = (error) => {\r\n        log(\"web socket onerror\", error);\r\n    };\r\n    ws.onmessage = (messageEvent) => {\r\n        log(\"web socket onmessage\");\r\n        onMessage(JSON.parse(messageEvent.data));\r\n    };\r\n    return () => {\r\n        ws.close();\r\n    };\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}