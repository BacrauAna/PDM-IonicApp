{"ast":null,"code":"import axios from 'axios';\nimport { getLogger } from '../core';\nconst log = getLogger('itemApi');\nconst baseUrl = 'http://localhost:3000';\nconst itemUrl = `${baseUrl}/item`;\n\nfunction withLogs(promise, fnName) {\n  log(`${fnName} - started`);\n  return promise.then(res => {\n    log(`${fnName} - succeeded`);\n    return Promise.resolve(res.data);\n  }).catch(err => {\n    log(`${fnName} - failed`);\n    return Promise.reject(err);\n  });\n}\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nexport const getItems = () => {\n  return withLogs(axios.get(itemUrl, config), 'getItems');\n};\nexport const createItem = item => {\n  return withLogs(axios.post(itemUrl, item, config), 'createItem');\n};\nexport const updateItem = item => {\n  return withLogs(axios.put(`${itemUrl}/${item.id}`, item, config), 'updateItem');\n};","map":{"version":3,"sources":["C:/Users/Anisoara Bacrau/Desktop/an3/PDM/ionic/PDM-IonicApp/src/todo/itemApi.tsx"],"names":["axios","getLogger","log","baseUrl","itemUrl","withLogs","promise","fnName","then","res","Promise","resolve","data","catch","err","reject","config","headers","getItems","get","createItem","item","post","updateItem","put","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,SAA1B;AAGA,MAAMC,GAAG,GAAGD,SAAS,CAAC,SAAD,CAArB;AAEA,MAAME,OAAO,GAAG,uBAAhB;AACA,MAAMC,OAAO,GAAI,GAAED,OAAQ,OAA3B;;AAMA,SAASE,QAAT,CAAqBC,OAArB,EAAyDC,MAAzD,EAAqF;AACjFL,EAAAA,GAAG,CAAE,GAAEK,MAAO,YAAX,CAAH;AACA,SAAOD,OAAO,CACTE,IADE,CACGC,GAAG,IAAI;AACTP,IAAAA,GAAG,CAAE,GAAEK,MAAO,cAAX,CAAH;AACA,WAAOG,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAApB,CAAP;AACH,GAJE,EAKFC,KALE,CAKIC,GAAG,IAAI;AACVZ,IAAAA,GAAG,CAAE,GAAEK,MAAO,WAAX,CAAH;AACA,WAAOG,OAAO,CAACK,MAAR,CAAeD,GAAf,CAAP;AACH,GARE,CAAP;AASH;;AAED,MAAME,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AADE,CAAf;AAMA,OAAO,MAAMC,QAAoC,GAAG,MAAM;AACtD,SAAOb,QAAQ,CAACL,KAAK,CAACmB,GAAN,CAAUf,OAAV,EAAmBY,MAAnB,CAAD,EAA6B,UAA7B,CAAf;AACH,CAFM;AAIP,OAAO,MAAMI,UAAqD,GAAGC,IAAI,IAAI;AACzE,SAAOhB,QAAQ,CAACL,KAAK,CAACsB,IAAN,CAAWlB,OAAX,EAAoBiB,IAApB,EAA0BL,MAA1B,CAAD,EAAoC,YAApC,CAAf;AACH,CAFM;AAIP,OAAO,MAAMO,UAAqD,GAAGF,IAAI,IAAI;AACzE,SAAOhB,QAAQ,CAACL,KAAK,CAACwB,GAAN,CAAW,GAAEpB,OAAQ,IAAGiB,IAAI,CAACI,EAAG,EAAhC,EAAmCJ,IAAnC,EAAyCL,MAAzC,CAAD,EAAmD,YAAnD,CAAf;AACH,CAFM","sourcesContent":["import axios from 'axios';\r\nimport { getLogger } from '../core';\r\nimport { ItemProps } from './ItemProps';\r\n\r\nconst log = getLogger('itemApi');\r\n\r\nconst baseUrl = 'http://localhost:3000';\r\nconst itemUrl = `${baseUrl}/item`;\r\n\r\ninterface ResponseProps<T> {\r\n    data: T;\r\n}\r\n\r\nfunction withLogs<T>(promise: Promise<ResponseProps<T>>, fnName: string): Promise<T> {\r\n    log(`${fnName} - started`);\r\n    return promise\r\n        .then(res => {\r\n            log(`${fnName} - succeeded`);\r\n            return Promise.resolve(res.data);\r\n        })\r\n        .catch(err => {\r\n            log(`${fnName} - failed`);\r\n            return Promise.reject(err);\r\n        });\r\n}\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n};\r\n\r\nexport const getItems: () => Promise<ItemProps[]> = () => {\r\n    return withLogs(axios.get(itemUrl, config), 'getItems');\r\n}\r\n\r\nexport const createItem: (item: ItemProps) => Promise<ItemProps[]> = item => {\r\n    return withLogs(axios.post(itemUrl, item, config), 'createItem');\r\n}\r\n\r\nexport const updateItem: (item: ItemProps) => Promise<ItemProps[]> = item => {\r\n    return withLogs(axios.put(`${itemUrl}/${item.id}`, item, config), 'updateItem');\r\n}\r\n"]},"metadata":{},"sourceType":"module"}