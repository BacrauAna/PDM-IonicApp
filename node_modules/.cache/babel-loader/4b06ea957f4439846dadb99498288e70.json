{"ast":null,"code":"import axios from 'axios';\nimport { authConfig, baseUrl, getLogger, withLogs } from '../core';\nimport { Plugins } from \"@capacitor/core\";\nconst {\n  Storage\n} = Plugins; //local\n\nconst beautyUrl = `http://${baseUrl}/api/beauty`;\nexport const getBeauties = token => {\n  //return withLogs(axios.get(carteUrl, authConfig(token)), 'getCartes');\n  var result = axios.get(beautyUrl, authConfig(token));\n  result.then(function (result) {\n    result.data.forEach(async beauty => {\n      await Storage.set({\n        key: beauty._id,\n        value: JSON.stringify({\n          id: beauty._id,\n          data: beauty.data,\n          ora: beauty.ora,\n          servicii: beauty.servicii,\n          nrPersoane: beauty.nrPeroane,\n          nume: beauty.nume,\n          ocupat: beauty.ocupat\n        })\n      });\n    });\n  });\n  return withLogs(result, \"getBeauties\");\n};\nexport const createBeauties = (token, beauty) => {\n  var result = axios.post(beautyUrl, beauty, authConfig(token));\n  result.then(async function (r) {\n    var beauty = r.data;\n    await Storage.set({\n      key: beauty._id,\n      value: JSON.stringify({\n        id: beauty._id,\n        data: beauty.data,\n        ora: beauty.ora,\n        servicii: beauty.servicii,\n        nrPersoane: beauty.nrPeroane,\n        nume: beauty.nume,\n        ocupat: beauty.ocupat\n      })\n    });\n  });\n  return withLogs(result, \"createBeauties\");\n};\nexport const updateBeauties = (token, beauty) => {\n  var result = axios.put(`${beautyUrl}/${beauty._id}`, beauty, authConfig(token));\n  result.then(async function (r) {\n    var beauty = r.data;\n    await Storage.set({\n      key: beauty._id,\n      value: JSON.stringify({\n        id: beauty._id,\n        data: beauty.data,\n        ora: beauty.ora,\n        servicii: beauty.servicii,\n        nrPersoane: beauty.nrPeroane,\n        nume: beauty.nume,\n        ocupat: beauty.ocupat\n      })\n    });\n  });\n  return withLogs(result, \"updateCarte\");\n};\nexport const eraseBeauty = (token, beauty) => {\n  var result = axios.delete(`${beautyUrl}/${beauty._id}`, authConfig(token));\n  result.then(async function (r) {\n    await Storage.remove({\n      key: beauty._id\n    });\n  });\n  return withLogs(result, \"deleteBeauty\");\n};\nconst log = getLogger('ws');\nexport const newWebSocket = (token, onMessage) => {\n  const ws = new WebSocket(`ws://${baseUrl}`);\n\n  ws.onopen = () => {\n    log(\"web socket onopen\");\n    ws.send(JSON.stringify({\n      type: \"authorization\",\n      payload: {\n        token\n      }\n    }));\n  };\n\n  ws.onclose = () => {\n    log(\"web socket onclose\");\n  };\n\n  ws.onerror = error => {\n    log(\"web socket onerror\", error);\n  };\n\n  ws.onmessage = messageEvent => {\n    log(\"web socket onmessage\");\n    onMessage(JSON.parse(messageEvent.data));\n  };\n\n  return () => {\n    ws.close();\n  };\n}; // import axios from 'axios';\n// import { getLogger } from '../core';\n// import { BeautyProps } from './BeautyProps';\n//\n// const log = getLogger('itemApi');\n//\n// const baseUrl = 'http://localhost:3000';\n// const itemUrl = `${baseUrl}/item`;\n//\n// interface ResponseProps<T> {\n//     data: T;\n// }\n//\n// function withLogs<T>(promise: Promise<ResponseProps<T>>, fnName: string): Promise<T> {\n//     log(`${fnName} - started`);\n//     return promise\n//         .then(res => {\n//             log(`${fnName} - succeeded`);\n//             return Promise.resolve(res.data);\n//         })\n//         .catch(err => {\n//             log(`${fnName} - failed`);\n//             return Promise.reject(err);\n//         });\n// }\n//\n// const config = {\n//     headers: {\n//         'Content-Type': 'application/json'\n//     }\n// };\n//\n// export const getItems: () => Promise<BeautyProps[]> = () => {\n//     return withLogs(axios.get(itemUrl, config), 'getItems');\n// }\n//\n// export const createItem: (item: BeautyProps) => Promise<BeautyProps[]> = item => {\n//     return withLogs(axios.post(itemUrl, item, config), 'createItem');\n// }\n//\n// export const updateItem: (item: BeautyProps) => Promise<BeautyProps[]> = item => {\n//     return withLogs(axios.put(`${itemUrl}/${item.id}`, item, config), 'updateItem');\n// }","map":{"version":3,"sources":["C:/Users/Anisoara Bacrau/Desktop/an3/PDM/ionic/PDM-IonicApp/src/todo/beautyApi.tsx"],"names":["axios","authConfig","baseUrl","getLogger","withLogs","Plugins","Storage","beautyUrl","getBeauties","token","result","get","then","data","forEach","beauty","set","key","_id","value","JSON","stringify","id","ora","servicii","nrPersoane","nrPeroane","nume","ocupat","createBeauties","post","r","updateBeauties","put","eraseBeauty","delete","remove","log","newWebSocket","onMessage","ws","WebSocket","onopen","send","type","payload","onclose","onerror","error","onmessage","messageEvent","parse","close"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { authConfig, baseUrl, getLogger, withLogs } from '../core';\r\nimport { BeautyProps } from './BeautyProps';\r\nimport { Plugins } from \"@capacitor/core\";\r\n\r\nconst { Storage } = Plugins; //local\r\nconst beautyUrl = `http://${baseUrl}/api/beauty`;\r\n\r\nexport const getBeauties: (token: string) => Promise<BeautyProps[]> = token => {\r\n    //return withLogs(axios.get(carteUrl, authConfig(token)), 'getCartes');\r\n    var result = axios.get(beautyUrl, authConfig(token));\r\n    result.then(function (result) {\r\n        result.data.forEach(async (beauty: BeautyProps) => {\r\n            await Storage.set({\r\n                key: beauty._id!,\r\n                value: JSON.stringify({\r\n                    id: beauty._id,\r\n                    data: beauty.data,\r\n                    ora: beauty.ora,\r\n                    servicii: beauty.servicii,\r\n                    nrPersoane: beauty.nrPeroane,\r\n                    nume: beauty.nume,\r\n                    ocupat: beauty.ocupat,\r\n                }),\r\n            });\r\n        });\r\n    });\r\n    return withLogs(result, \"getBeauties\");\r\n};\r\n\r\n\r\n\r\nexport const createBeauties:\r\n    (token: string,\r\n     beauty: BeautyProps)\r\n        => Promise<BeautyProps> = (token, beauty) => {\r\n    var result = axios.post(beautyUrl, beauty, authConfig(token));\r\n    result.then(async function (r) {\r\n        var beauty = r.data;\r\n        await Storage.set({\r\n            key: beauty._id!,\r\n            value: JSON.stringify({\r\n                id: beauty._id,\r\n                data: beauty.data,\r\n                ora: beauty.ora,\r\n                servicii: beauty.servicii,\r\n                nrPersoane: beauty.nrPeroane,\r\n                nume: beauty.nume,\r\n                ocupat: beauty.ocupat,\r\n            }),\r\n        });\r\n    });\r\n    return withLogs(result, \"createBeauties\");\r\n};\r\n\r\nexport const updateBeauties:\r\n    (token: string,\r\n     beauty: BeautyProps)\r\n        => Promise<BeautyProps[]> = (token, beauty) => {\r\n    var result = axios.put(`${beautyUrl}/${beauty._id}`, beauty, authConfig(token));\r\n    result.then(async function (r) {\r\n        var beauty = r.data;\r\n        await Storage.set({\r\n            key: beauty._id!,\r\n            value: JSON.stringify({\r\n                id: beauty._id,\r\n                data: beauty.data,\r\n                ora: beauty.ora,\r\n                servicii: beauty.servicii,\r\n                nrPersoane: beauty.nrPeroane,\r\n                nume: beauty.nume,\r\n                ocupat: beauty.ocupat,\r\n            }),\r\n        });\r\n    });\r\n    return withLogs(result, \"updateCarte\");\r\n};\r\nexport const eraseBeauty: (\r\n    token: string,\r\n    beauty: BeautyProps)\r\n    => Promise<BeautyProps[]> = (token, beauty) => {\r\n    var result = axios.delete(`${beautyUrl}/${beauty._id}`, authConfig(token));\r\n    result.then(async function (r) {\r\n        await Storage.remove({ key: beauty._id! });\r\n    });\r\n    return withLogs(result, \"deleteBeauty\");\r\n};\r\n\r\ninterface MessageData {\r\n    type: string;\r\n    payload: BeautyProps;\r\n}\r\n\r\nconst log = getLogger('ws');\r\n\r\nexport const newWebSocket = (\r\n    token: string,\r\n    onMessage: (data: MessageData) => void\r\n) => {\r\n    const ws = new WebSocket(`ws://${baseUrl}`);\r\n    ws.onopen = () => {\r\n        log(\"web socket onopen\");\r\n        ws.send(JSON.stringify({ type: \"authorization\", payload: { token } }));\r\n    };\r\n    ws.onclose = () => {\r\n        log(\"web socket onclose\");\r\n    };\r\n    ws.onerror = (error) => {\r\n        log(\"web socket onerror\", error);\r\n    };\r\n    ws.onmessage = (messageEvent) => {\r\n        log(\"web socket onmessage\");\r\n        onMessage(JSON.parse(messageEvent.data));\r\n    };\r\n    return () => {\r\n        ws.close();\r\n    };\r\n};\r\n\r\n\r\n// import axios from 'axios';\r\n// import { getLogger } from '../core';\r\n// import { BeautyProps } from './BeautyProps';\r\n//\r\n// const log = getLogger('itemApi');\r\n//\r\n// const baseUrl = 'http://localhost:3000';\r\n// const itemUrl = `${baseUrl}/item`;\r\n//\r\n// interface ResponseProps<T> {\r\n//     data: T;\r\n// }\r\n//\r\n// function withLogs<T>(promise: Promise<ResponseProps<T>>, fnName: string): Promise<T> {\r\n//     log(`${fnName} - started`);\r\n//     return promise\r\n//         .then(res => {\r\n//             log(`${fnName} - succeeded`);\r\n//             return Promise.resolve(res.data);\r\n//         })\r\n//         .catch(err => {\r\n//             log(`${fnName} - failed`);\r\n//             return Promise.reject(err);\r\n//         });\r\n// }\r\n//\r\n// const config = {\r\n//     headers: {\r\n//         'Content-Type': 'application/json'\r\n//     }\r\n// };\r\n//\r\n// export const getItems: () => Promise<BeautyProps[]> = () => {\r\n//     return withLogs(axios.get(itemUrl, config), 'getItems');\r\n// }\r\n//\r\n// export const createItem: (item: BeautyProps) => Promise<BeautyProps[]> = item => {\r\n//     return withLogs(axios.post(itemUrl, item, config), 'createItem');\r\n// }\r\n//\r\n// export const updateItem: (item: BeautyProps) => Promise<BeautyProps[]> = item => {\r\n//     return withLogs(axios.put(`${itemUrl}/${item.id}`, item, config), 'updateItem');\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}